package com.bridgelabz.Fundoo.accesstoken;

import org.springframework.stereotype.Component;

import com.auth0.jwt.JWT;
import com.auth0.jwt.JWTVerifier;
import com.auth0.jwt.algorithms.Algorithm;
import com.auth0.jwt.interfaces.Claim;
import com.auth0.jwt.interfaces.DecodedJWT;
import com.auth0.jwt.interfaces.Verification;

@Component
public class AccessToken {

	private String secret = "name";

	public String generateAccessToken(String userId) {

		String token = null;
		
		Algorithm algorithm = Algorithm.HMAC256(secret);
		token = JWT.create().withClaim("userId", userId).sign(algorithm);

		return token;
	}

	public String verifyAccessToken(String token) {

		String userId;
		Verification verification = null;
		try {
			verification = JWT.require(Algorithm.HMAC256(secret));
		} catch (IllegalArgumentException e) {
			e.printStackTrace();
		} 
		System.out.println("hi");
		JWTVerifier jwtVerifier = verification.build();
		DecodedJWT decodedJWT = jwtVerifier.verify(token);
		Claim claim = decodedJWT.getClaim("userId");
		System.out.println(claim.asLong());
		userId = claim.asString();
		return userId;
	}

}
